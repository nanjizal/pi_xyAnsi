// Generated by Haxe 5.0.0-alpha.1+1423a5f
#include <hxcpp.h>

#ifndef INCLUDED_Attribute
#include <Attribute.h>
#endif

::Attribute Attribute_obj::Black;

::Attribute Attribute_obj::BlackBack;

::Attribute Attribute_obj::Blink;

::Attribute Attribute_obj::BlinkOff;

::Attribute Attribute_obj::Blue;

::Attribute Attribute_obj::BlueBack;

::Attribute Attribute_obj::Bold;

::Attribute Attribute_obj::BoldOff;

::Attribute Attribute_obj::Concealed;

::Attribute Attribute_obj::ConcealedOff;

::Attribute Attribute_obj::Cyan;

::Attribute Attribute_obj::CyanBack;

::Attribute Attribute_obj::DefaultBackground;

::Attribute Attribute_obj::DefaultForeground;

::Attribute Attribute_obj::Green;

::Attribute Attribute_obj::GreenBack;

::Attribute Attribute_obj::Magenta;

::Attribute Attribute_obj::MagentaBack;

::Attribute Attribute_obj::NormalVideo;

::Attribute Attribute_obj::Off;

::Attribute Attribute_obj::Red;

::Attribute Attribute_obj::RedBack;

::Attribute Attribute_obj::ReverseVideo;

::Attribute Attribute_obj::Underline;

::Attribute Attribute_obj::UnderlineOff;

::Attribute Attribute_obj::White;

::Attribute Attribute_obj::WhiteBack;

::Attribute Attribute_obj::Yellow;

::Attribute Attribute_obj::YellowBack;

bool Attribute_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Black",9f,45,1f,48)) { outValue = Attribute_obj::Black; return true; }
	if (inName==HX_("BlackBack",66,07,46,a2)) { outValue = Attribute_obj::BlackBack; return true; }
	if (inName==HX_("Blink",3c,61,25,48)) { outValue = Attribute_obj::Blink; return true; }
	if (inName==HX_("BlinkOff",93,57,92,e2)) { outValue = Attribute_obj::BlinkOff; return true; }
	if (inName==HX_("Blue",ba,6e,f2,2b)) { outValue = Attribute_obj::Blue; return true; }
	if (inName==HX_("BlueBack",01,5a,33,65)) { outValue = Attribute_obj::BlueBack; return true; }
	if (inName==HX_("Bold",a5,ad,f4,2b)) { outValue = Attribute_obj::Bold; return true; }
	if (inName==HX_("BoldOff",ca,f2,c1,8b)) { outValue = Attribute_obj::BoldOff; return true; }
	if (inName==HX_("Concealed",4e,4b,84,dd)) { outValue = Attribute_obj::Concealed; return true; }
	if (inName==HX_("ConcealedOff",c1,84,c7,33)) { outValue = Attribute_obj::ConcealedOff; return true; }
	if (inName==HX_("Cyan",43,71,a5,2c)) { outValue = Attribute_obj::Cyan; return true; }
	if (inName==HX_("CyanBack",0a,d5,74,ea)) { outValue = Attribute_obj::CyanBack; return true; }
	if (inName==HX_("DefaultBackground",ef,0b,05,9e)) { outValue = Attribute_obj::DefaultBackground; return true; }
	if (inName==HX_("DefaultForeground",c4,90,d6,88)) { outValue = Attribute_obj::DefaultForeground; return true; }
	if (inName==HX_("Green",a3,7e,1a,2d)) { outValue = Attribute_obj::Green; return true; }
	if (inName==HX_("GreenBack",6a,12,6c,45)) { outValue = Attribute_obj::GreenBack; return true; }
	if (inName==HX_("Magenta",09,e2,ee,db)) { outValue = Attribute_obj::Magenta; return true; }
	if (inName==HX_("MagentaBack",d0,20,8d,54)) { outValue = Attribute_obj::MagentaBack; return true; }
	if (inName==HX_("NormalVideo",b4,7c,60,a8)) { outValue = Attribute_obj::NormalVideo; return true; }
	if (inName==HX_("Off",4f,4b,3c,00)) { outValue = Attribute_obj::Off; return true; }
	if (inName==HX_("Red",31,91,3e,00)) { outValue = Attribute_obj::Red; return true; }
	if (inName==HX_("RedBack",f8,83,e7,73)) { outValue = Attribute_obj::RedBack; return true; }
	if (inName==HX_("ReverseVideo",19,3c,73,15)) { outValue = Attribute_obj::ReverseVideo; return true; }
	if (inName==HX_("Underline",ec,f4,a3,29)) { outValue = Attribute_obj::Underline; return true; }
	if (inName==HX_("UnderlineOff",e3,31,87,22)) { outValue = Attribute_obj::UnderlineOff; return true; }
	if (inName==HX_("White",89,ba,ea,5c)) { outValue = Attribute_obj::White; return true; }
	if (inName==HX_("WhiteBack",50,39,9f,af)) { outValue = Attribute_obj::WhiteBack; return true; }
	if (inName==HX_("Yellow",94,13,f1,04)) { outValue = Attribute_obj::Yellow; return true; }
	if (inName==HX_("YellowBack",db,73,ae,d1)) { outValue = Attribute_obj::YellowBack; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(Attribute_obj)

bool Attribute_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId == (int)0x00000001 || inClassId == ::hx::EnumBase_obj::_hx_ClassId || inClassId == _hx_ClassId;
}
int Attribute_obj::__FindIndex(::String inName)
{
	if (inName==HX_("Black",9f,45,1f,48)) return 11;
	if (inName==HX_("BlackBack",66,07,46,a2)) return 20;
	if (inName==HX_("Blink",3c,61,25,48)) return 3;
	if (inName==HX_("BlinkOff",93,57,92,e2)) return 8;
	if (inName==HX_("Blue",ba,6e,f2,2b)) return 15;
	if (inName==HX_("BlueBack",01,5a,33,65)) return 24;
	if (inName==HX_("Bold",a5,ad,f4,2b)) return 1;
	if (inName==HX_("BoldOff",ca,f2,c1,8b)) return 6;
	if (inName==HX_("Concealed",4e,4b,84,dd)) return 5;
	if (inName==HX_("ConcealedOff",c1,84,c7,33)) return 10;
	if (inName==HX_("Cyan",43,71,a5,2c)) return 17;
	if (inName==HX_("CyanBack",0a,d5,74,ea)) return 26;
	if (inName==HX_("DefaultBackground",ef,0b,05,9e)) return 28;
	if (inName==HX_("DefaultForeground",c4,90,d6,88)) return 19;
	if (inName==HX_("Green",a3,7e,1a,2d)) return 13;
	if (inName==HX_("GreenBack",6a,12,6c,45)) return 22;
	if (inName==HX_("Magenta",09,e2,ee,db)) return 16;
	if (inName==HX_("MagentaBack",d0,20,8d,54)) return 25;
	if (inName==HX_("NormalVideo",b4,7c,60,a8)) return 9;
	if (inName==HX_("Off",4f,4b,3c,00)) return 0;
	if (inName==HX_("Red",31,91,3e,00)) return 12;
	if (inName==HX_("RedBack",f8,83,e7,73)) return 21;
	if (inName==HX_("ReverseVideo",19,3c,73,15)) return 4;
	if (inName==HX_("Underline",ec,f4,a3,29)) return 2;
	if (inName==HX_("UnderlineOff",e3,31,87,22)) return 7;
	if (inName==HX_("White",89,ba,ea,5c)) return 18;
	if (inName==HX_("WhiteBack",50,39,9f,af)) return 27;
	if (inName==HX_("Yellow",94,13,f1,04)) return 14;
	if (inName==HX_("YellowBack",db,73,ae,d1)) return 23;
	return super::__FindIndex(inName);
}

int Attribute_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("Black",9f,45,1f,48)) return 0;
	if (inName==HX_("BlackBack",66,07,46,a2)) return 0;
	if (inName==HX_("Blink",3c,61,25,48)) return 0;
	if (inName==HX_("BlinkOff",93,57,92,e2)) return 0;
	if (inName==HX_("Blue",ba,6e,f2,2b)) return 0;
	if (inName==HX_("BlueBack",01,5a,33,65)) return 0;
	if (inName==HX_("Bold",a5,ad,f4,2b)) return 0;
	if (inName==HX_("BoldOff",ca,f2,c1,8b)) return 0;
	if (inName==HX_("Concealed",4e,4b,84,dd)) return 0;
	if (inName==HX_("ConcealedOff",c1,84,c7,33)) return 0;
	if (inName==HX_("Cyan",43,71,a5,2c)) return 0;
	if (inName==HX_("CyanBack",0a,d5,74,ea)) return 0;
	if (inName==HX_("DefaultBackground",ef,0b,05,9e)) return 0;
	if (inName==HX_("DefaultForeground",c4,90,d6,88)) return 0;
	if (inName==HX_("Green",a3,7e,1a,2d)) return 0;
	if (inName==HX_("GreenBack",6a,12,6c,45)) return 0;
	if (inName==HX_("Magenta",09,e2,ee,db)) return 0;
	if (inName==HX_("MagentaBack",d0,20,8d,54)) return 0;
	if (inName==HX_("NormalVideo",b4,7c,60,a8)) return 0;
	if (inName==HX_("Off",4f,4b,3c,00)) return 0;
	if (inName==HX_("Red",31,91,3e,00)) return 0;
	if (inName==HX_("RedBack",f8,83,e7,73)) return 0;
	if (inName==HX_("ReverseVideo",19,3c,73,15)) return 0;
	if (inName==HX_("Underline",ec,f4,a3,29)) return 0;
	if (inName==HX_("UnderlineOff",e3,31,87,22)) return 0;
	if (inName==HX_("White",89,ba,ea,5c)) return 0;
	if (inName==HX_("WhiteBack",50,39,9f,af)) return 0;
	if (inName==HX_("Yellow",94,13,f1,04)) return 0;
	if (inName==HX_("YellowBack",db,73,ae,d1)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val Attribute_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Black",9f,45,1f,48)) return Black;
	if (inName==HX_("BlackBack",66,07,46,a2)) return BlackBack;
	if (inName==HX_("Blink",3c,61,25,48)) return Blink;
	if (inName==HX_("BlinkOff",93,57,92,e2)) return BlinkOff;
	if (inName==HX_("Blue",ba,6e,f2,2b)) return Blue;
	if (inName==HX_("BlueBack",01,5a,33,65)) return BlueBack;
	if (inName==HX_("Bold",a5,ad,f4,2b)) return Bold;
	if (inName==HX_("BoldOff",ca,f2,c1,8b)) return BoldOff;
	if (inName==HX_("Concealed",4e,4b,84,dd)) return Concealed;
	if (inName==HX_("ConcealedOff",c1,84,c7,33)) return ConcealedOff;
	if (inName==HX_("Cyan",43,71,a5,2c)) return Cyan;
	if (inName==HX_("CyanBack",0a,d5,74,ea)) return CyanBack;
	if (inName==HX_("DefaultBackground",ef,0b,05,9e)) return DefaultBackground;
	if (inName==HX_("DefaultForeground",c4,90,d6,88)) return DefaultForeground;
	if (inName==HX_("Green",a3,7e,1a,2d)) return Green;
	if (inName==HX_("GreenBack",6a,12,6c,45)) return GreenBack;
	if (inName==HX_("Magenta",09,e2,ee,db)) return Magenta;
	if (inName==HX_("MagentaBack",d0,20,8d,54)) return MagentaBack;
	if (inName==HX_("NormalVideo",b4,7c,60,a8)) return NormalVideo;
	if (inName==HX_("Off",4f,4b,3c,00)) return Off;
	if (inName==HX_("Red",31,91,3e,00)) return Red;
	if (inName==HX_("RedBack",f8,83,e7,73)) return RedBack;
	if (inName==HX_("ReverseVideo",19,3c,73,15)) return ReverseVideo;
	if (inName==HX_("Underline",ec,f4,a3,29)) return Underline;
	if (inName==HX_("UnderlineOff",e3,31,87,22)) return UnderlineOff;
	if (inName==HX_("White",89,ba,ea,5c)) return White;
	if (inName==HX_("WhiteBack",50,39,9f,af)) return WhiteBack;
	if (inName==HX_("Yellow",94,13,f1,04)) return Yellow;
	if (inName==HX_("YellowBack",db,73,ae,d1)) return YellowBack;
	return super::__Field(inName,inCallProp);
}

static ::String Attribute_obj_sStaticFields[] = {
	HX_("Off",4f,4b,3c,00),
	HX_("Bold",a5,ad,f4,2b),
	HX_("Underline",ec,f4,a3,29),
	HX_("Blink",3c,61,25,48),
	HX_("ReverseVideo",19,3c,73,15),
	HX_("Concealed",4e,4b,84,dd),
	HX_("BoldOff",ca,f2,c1,8b),
	HX_("UnderlineOff",e3,31,87,22),
	HX_("BlinkOff",93,57,92,e2),
	HX_("NormalVideo",b4,7c,60,a8),
	HX_("ConcealedOff",c1,84,c7,33),
	HX_("Black",9f,45,1f,48),
	HX_("Red",31,91,3e,00),
	HX_("Green",a3,7e,1a,2d),
	HX_("Yellow",94,13,f1,04),
	HX_("Blue",ba,6e,f2,2b),
	HX_("Magenta",09,e2,ee,db),
	HX_("Cyan",43,71,a5,2c),
	HX_("White",89,ba,ea,5c),
	HX_("DefaultForeground",c4,90,d6,88),
	HX_("BlackBack",66,07,46,a2),
	HX_("RedBack",f8,83,e7,73),
	HX_("GreenBack",6a,12,6c,45),
	HX_("YellowBack",db,73,ae,d1),
	HX_("BlueBack",01,5a,33,65),
	HX_("MagentaBack",d0,20,8d,54),
	HX_("CyanBack",0a,d5,74,ea),
	HX_("WhiteBack",50,39,9f,af),
	HX_("DefaultBackground",ef,0b,05,9e),
	::String(null())
};

::hx::Class Attribute_obj::__mClass;

Dynamic __Create_Attribute_obj() { return new Attribute_obj; }

void Attribute_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("Attribute",fc,4f,c3,9c), ::hx::TCanCast< Attribute_obj >,Attribute_obj_sStaticFields,0,
	&__Create_Attribute_obj, &__Create,
	&super::__SGetClass(), &CreateAttribute_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &Attribute_obj::__GetStatic;
}

void Attribute_obj::__boot()
{
Black = ::hx::CreateConstEnum< Attribute_obj >(HX_("Black",9f,45,1f,48),11);
BlackBack = ::hx::CreateConstEnum< Attribute_obj >(HX_("BlackBack",66,07,46,a2),20);
Blink = ::hx::CreateConstEnum< Attribute_obj >(HX_("Blink",3c,61,25,48),3);
BlinkOff = ::hx::CreateConstEnum< Attribute_obj >(HX_("BlinkOff",93,57,92,e2),8);
Blue = ::hx::CreateConstEnum< Attribute_obj >(HX_("Blue",ba,6e,f2,2b),15);
BlueBack = ::hx::CreateConstEnum< Attribute_obj >(HX_("BlueBack",01,5a,33,65),24);
Bold = ::hx::CreateConstEnum< Attribute_obj >(HX_("Bold",a5,ad,f4,2b),1);
BoldOff = ::hx::CreateConstEnum< Attribute_obj >(HX_("BoldOff",ca,f2,c1,8b),6);
Concealed = ::hx::CreateConstEnum< Attribute_obj >(HX_("Concealed",4e,4b,84,dd),5);
ConcealedOff = ::hx::CreateConstEnum< Attribute_obj >(HX_("ConcealedOff",c1,84,c7,33),10);
Cyan = ::hx::CreateConstEnum< Attribute_obj >(HX_("Cyan",43,71,a5,2c),17);
CyanBack = ::hx::CreateConstEnum< Attribute_obj >(HX_("CyanBack",0a,d5,74,ea),26);
DefaultBackground = ::hx::CreateConstEnum< Attribute_obj >(HX_("DefaultBackground",ef,0b,05,9e),28);
DefaultForeground = ::hx::CreateConstEnum< Attribute_obj >(HX_("DefaultForeground",c4,90,d6,88),19);
Green = ::hx::CreateConstEnum< Attribute_obj >(HX_("Green",a3,7e,1a,2d),13);
GreenBack = ::hx::CreateConstEnum< Attribute_obj >(HX_("GreenBack",6a,12,6c,45),22);
Magenta = ::hx::CreateConstEnum< Attribute_obj >(HX_("Magenta",09,e2,ee,db),16);
MagentaBack = ::hx::CreateConstEnum< Attribute_obj >(HX_("MagentaBack",d0,20,8d,54),25);
NormalVideo = ::hx::CreateConstEnum< Attribute_obj >(HX_("NormalVideo",b4,7c,60,a8),9);
Off = ::hx::CreateConstEnum< Attribute_obj >(HX_("Off",4f,4b,3c,00),0);
Red = ::hx::CreateConstEnum< Attribute_obj >(HX_("Red",31,91,3e,00),12);
RedBack = ::hx::CreateConstEnum< Attribute_obj >(HX_("RedBack",f8,83,e7,73),21);
ReverseVideo = ::hx::CreateConstEnum< Attribute_obj >(HX_("ReverseVideo",19,3c,73,15),4);
Underline = ::hx::CreateConstEnum< Attribute_obj >(HX_("Underline",ec,f4,a3,29),2);
UnderlineOff = ::hx::CreateConstEnum< Attribute_obj >(HX_("UnderlineOff",e3,31,87,22),7);
White = ::hx::CreateConstEnum< Attribute_obj >(HX_("White",89,ba,ea,5c),18);
WhiteBack = ::hx::CreateConstEnum< Attribute_obj >(HX_("WhiteBack",50,39,9f,af),27);
Yellow = ::hx::CreateConstEnum< Attribute_obj >(HX_("Yellow",94,13,f1,04),14);
YellowBack = ::hx::CreateConstEnum< Attribute_obj >(HX_("YellowBack",db,73,ae,d1),23);
}


