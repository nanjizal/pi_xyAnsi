// Generated by Haxe 5.0.0-alpha.1+1423a5f
#include <hxcpp.h>

#ifndef INCLUDED_pi_xy_algo_TriPoints_
#include <pi_xy/algo/TriPoints_.h>
#endif

namespace pi_xy{
namespace algo{

void TriPoints__obj::__construct() { }

Dynamic TriPoints__obj::__CreateEmpty() { return new TriPoints__obj; }

void *TriPoints__obj::_hx_vtable = 0;

Dynamic TriPoints__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TriPoints__obj > _hx_result = new TriPoints__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TriPoints__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6c0be2ab;
}


TriPoints__obj::TriPoints__obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *TriPoints__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *TriPoints__obj_sStaticStorageInfo = 0;
#endif

::hx::Class TriPoints__obj::__mClass;

void TriPoints__obj::__register()
{
	TriPoints__obj _hx_dummy;
	TriPoints__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("pi_xy.algo.TriPoints_",25,5c,d1,d3);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< TriPoints__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TriPoints__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TriPoints__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace pi_xy
} // end namespace algo
